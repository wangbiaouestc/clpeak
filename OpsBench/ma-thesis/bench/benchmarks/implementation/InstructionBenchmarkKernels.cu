/*
 * InstructionBenchmarkKernels.cu
 *
 *  Created on: Nov 22, 2013
 *      Author: michael
 */

#include "benchmarks/interface/InstructionBenchmark.hpp"
#include "util/interface/Repeat.hpp"

/* WARP VOTE INTRINSICS */
K_OP_DEP(ALL, 128, UINT)
K_OP_DEP(ANY, 128, UINT)

/* ARITHMETIC INSTRUCTIONS: UINT*/
K_OP_DEP(ADD, 128, UINT)
K_OP_DEP(SUB, 128, UINT)
K_OP_DEP(MUL, 128, UINT)
K_OP_DEP(DIV, 128, UINT)
K_OP_DEP(REM, 128, UINT)
K_OP_DEP(MAD, 128, UINT)
K_OP_DEP(MIN, 128, UINT)
K_OP_DEP(MAX, 128, UINT)

/* ARITHMETIC INSTRUCTIONS: INT */
K_OP_DEP(ADD, 128, INT)
K_OP_DEP(SUB, 128, INT)
K_OP_DEP(MUL, 128, INT)
K_OP_DEP(DIV, 128, INT)
K_OP_DEP(REM, 128, INT)
K_OP_DEP(MAD, 128, INT)
K_OP_DEP(ABS, 128, INT)
K_OP_DEP(NEG, 128, INT)
K_OP_DEP(MIN, 128, INT)
K_OP_DEP(MAX, 128, INT)

/* ARITHMETIC INSTRUCTIONS: FLOAT */
K_OP_DEP(ADD, 128, FLOAT)
K_OP_DEP(SUB, 128, FLOAT)
K_OP_DEP(MUL, 128, FLOAT)
K_OP_DEP(DIV, 128, FLOAT)
K_OP_DEP(MAD, 128, FLOAT)
K_OP_DEP(ABS, 128, FLOAT)
K_OP_DEP(MIN, 128, FLOAT)
K_OP_DEP(MAX, 128, FLOAT)

/* ARITHMETIC INSTRUCTIONS: DOUBLE */
K_OP_DEP(ADD, 128, DOUBLE)
K_OP_DEP(SUB, 128, DOUBLE)
K_OP_DEP(MUL, 128, DOUBLE)
K_OP_DEP(DIV, 128, DOUBLE)
K_OP_DEP(MAD, 128, DOUBLE)
K_OP_DEP(ABS, 128, DOUBLE)
K_OP_DEP(MIN, 128, DOUBLE)
K_OP_DEP(MAX, 128, DOUBLE)

/* LOGIC INSTRUCTIONS */
K_OP_DEP(AND,  128, UINT) 
K_OP_DEP(OR,   128, UINT) 
K_OP_DEP(XOR,  128, UINT) 
K_OP_DEP(SHL,  128, UINT) 
K_OP_DEP(SHR,  128, UINT)
K_OP_DEP(NOT,  128, UINT) 
K_OP_DEP(NOT2,  128, INT) 
K_OP_DEP(CNOT, 128, UINT)
K_OP_DEP(ANDNOT,  128, UINT) 
K_OP_DEP(ORNOT,   128, UINT) 
K_OP_DEP(XORNOT,  128, UINT) 
K_OP_DEP(ADDNOT,  128, UINT) 
K_OP_DEP(ANDNOTNOT,  128, UINT) 

/* ARITHMETIC INSTRINSICS: UINT/INT */
K_OP_DEP(UMUL24, 128, UINT)
K_OP_DEP(MUL24, 128, INT)
K_OP_DEP(UMULHI, 128, UINT)
K_OP_DEP(MULHI, 128, INT)
K_OP_DEP(USAD, 128, UINT)
K_OP_DEP(SAD, 128, INT)

/* ARITHMETIC INSTRINSICS: FLOAT */
K_OP_DEP(FADD_RN, 128, FLOAT)
K_OP_DEP(FADD_RZ, 128, FLOAT)
K_OP_DEP(FMUL_RN, 128, FLOAT)
K_OP_DEP(FMUL_RZ, 128, FLOAT)
K_OP_DEP(FDIVIDEF, 128, FLOAT)

/* INSTRINSICS: DOUBLE */
K_OP_DEP(DADD_RN, 128, DOUBLE)

/* MATH INSTRUCTIONS: FLOAT */
K_OP_DEP(RCP, 128, FLOAT)
K_OP_DEP(SQRT, 128, FLOAT)
K_OP_DEP(RSQRT, 128, FLOAT)
K_OP_DEP(SIN, 128, FLOAT)
K_OP_DEP(COS, 128, FLOAT)
K_OP_DEP(TAN, 128, FLOAT)
K_OP_DEP(EXP, 128, FLOAT)
K_OP_DEP(EXP10, 128, FLOAT)
K_OP_DEP(LOG, 128, FLOAT)
K_OP_DEP(LOG2, 128, FLOAT)
K_OP_DEP(LOG10, 128, FLOAT)
K_OP_DEP(POW, 128, FLOAT)

/* MATH INTRINSICS: FLOAT */
K_OP_DEP(SINF, 128, FLOAT)
K_OP_DEP(COSF, 128, FLOAT)
K_OP_DEP(TANF, 128, FLOAT)
K_OP_DEP(EXPF, 128, FLOAT)
K_OP_DEP(EXP2F, 128, FLOAT)
K_OP_DEP(EXP10F, 128, FLOAT)
K_OP_DEP(LOGF, 128, FLOAT)
K_OP_DEP(LOG2F, 128, FLOAT)
K_OP_DEP(LOG10F, 128, FLOAT)
K_OP_DEP(POWF, 128, FLOAT)

/* CONVERSION */
K_OP_DEP(INTASFLOAT, 128, UINT)
K_OP_DEP(FLOATASINT, 128, FLOAT)

/* MISC */
K_OP_DEP(POPC, 128, UINT)
K_OP_DEP(CLZ, 128, UINT)
K_OP_DEP(CLZLL, 128, UINT)
K_OP_DEP(FFS, 128, UINT)
K_OP_DEP(FFSLL, 128, UINT)
K_OP_DEP(SATURATE, 128, FLOAT)

/* ATOMIC INSTRUCTIONS NEEDS SM1.1 and SM1.2 for SHARED*/
// K_OP_DEP_ATOMIC(ATOMICADD, 128, UINT)
